<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="0" total="4" passed="3">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="0" started-at="2022-07-17T12:05:33 IST" finished-at="2022-07-17T12:05:33 IST">
    <groups>
    </groups>
  </suite> <!-- Suite -->
  <suite name="Smoke" duration-ms="4973" started-at="2022-07-17T12:05:28 IST" finished-at="2022-07-17T12:05:33 IST">
    <groups>
    </groups>
    <test name="Smoke" duration-ms="4973" started-at="2022-07-17T12:05:28 IST" finished-at="2022-07-17T12:05:33 IST">
      <class name="Smoke.Test1Test">
        <test-method status="PASS" signature="Login()[pri:1, instance:Smoke.Test1Test@2c177f9e]" name="Login" duration-ms="215" started-at="2022-07-17T12:05:28 IST" description="1st test" finished-at="2022-07-17T12:05:28 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Login -->
        <test-method status="PASS" signature="ThirdMethod()[pri:0, instance:Smoke.Test1Test@2c177f9e]" name="ThirdMethod" duration-ms="212" started-at="2022-07-17T12:05:28 IST" finished-at="2022-07-17T12:05:28 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ThirdMethod -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:Smoke.Test1Test@2c177f9e]" name="afterMethod" is-config="true" duration-ms="9" started-at="2022-07-17T12:05:28 IST" finished-at="2022-07-17T12:05:28 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ThirdMethod status=SUCCESS method=Test1Test.ThirdMethod()[pri:0, instance:Smoke.Test1Test@2c177f9e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:Smoke.Test1Test@2c177f9e]" name="afterMethod" is-config="true" duration-ms="7" started-at="2022-07-17T12:05:28 IST" finished-at="2022-07-17T12:05:28 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Login status=SUCCESS method=Test1Test.Login()[pri:1, instance:Smoke.Test1Test@2c177f9e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="FourthMethod()[pri:0, instance:Smoke.Test1Test@2c177f9e]" name="FourthMethod" duration-ms="6" started-at="2022-07-17T12:05:28 IST" depends-on-methods="Smoke.Test1Test.Login" finished-at="2022-07-17T12:05:28 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- FourthMethod -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:Smoke.Test1Test@2c177f9e]" name="afterMethod" is-config="true" duration-ms="1" started-at="2022-07-17T12:05:28 IST" finished-at="2022-07-17T12:05:28 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=FourthMethod status=SUCCESS method=Test1Test.FourthMethod()[pri:0, instance:Smoke.Test1Test@2c177f9e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="FAIL" signature="SecondMethod()[pri:0, instance:Smoke.Test1Test@2c177f9e]" name="SecondMethod" duration-ms="16" started-at="2022-07-17T12:05:28 IST" depends-on-methods="Smoke.Test1Test.Login" finished-at="2022-07-17T12:05:28 IST">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:819)
at org.testng.Assert.assertEquals(Assert.java:829)
at Smoke.Test1Test.SecondMethod(Test1Test.java:39)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:132)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:599)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:822)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
at java.lang.Thread.run(Thread.java:750)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SecondMethod -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:Smoke.Test1Test@2c177f9e]" name="afterMethod" is-config="true" duration-ms="4233" started-at="2022-07-17T12:05:28 IST" finished-at="2022-07-17T12:05:33 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=SecondMethod status=FAILURE method=Test1Test.SecondMethod()[pri:0, instance:Smoke.Test1Test@2c177f9e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="endTests()[pri:0, instance:Smoke.Test1Test@2c177f9e]" name="endTests" is-config="true" duration-ms="0" started-at="2022-07-17T12:05:33 IST" finished-at="2022-07-17T12:05:33 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTests -->
      </class> <!-- Smoke.Test1Test -->
    </test> <!-- Smoke -->
  </suite> <!-- Smoke -->
</testng-results>
